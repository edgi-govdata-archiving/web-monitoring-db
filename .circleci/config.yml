version: 2.1

executors:
  rails_executor:
    working_directory: ~/web-monitoring-db
    docker:
      - image: cimg/ruby:3.4.7-node
        environment:
          RAILS_ENV: test
          RACK_ENV: test
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: root
          HOST_URL: 'web-monitoring-db.test'
          ALLOWED_ARCHIVE_HOSTS: 'https://edgi-wm-archive.s3.amazonaws.com/ https://edgi-wm-versionista.s3.amazonaws.com/ https://test-bucket.s3.amazonaws.com/'
      - image: cimg/postgres:14.19
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle-test_test

commands:
  setup_bundler:
    description: "Set up Bundler dependencies"
    steps:
      - run:
          name: Install bundler with appropriate version
          command: gem install bundler -v $(grep -A 1 "BUNDLED WITH" Gemfile.lock | tail -1 | tr -d " ")
      - restore_cache:
          keys:
            - v7-bundler-{{ arch }}-{{ checksum "Gemfile.lock" }}
            - v7-bundler-{{ arch }}-
      - run:
          name: Install Bundle/Gems
          command: |
            bundle config path vendor/bundle
            bundle config frozen true
            bundle install
            echo '======== CLEANING Bundle ========='
            bundle clean
      - save_cache:
          key: v7-bundler-{{ arch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - ./vendor/bundle

jobs:
  install_dependencies:
    executor: rails_executor
    steps:
      - checkout
      - setup_bundler

  lint:
    executor: rails_executor
    steps:
      - checkout
      - setup_bundler
      - run:
          name: Code linting
          command: bundle exec rubocop --parallel

  test:
    executor: rails_executor
    environment:
      PARALLEL_WORKERS: "1"
    steps:
      - checkout
      - setup_bundler
      - run:
          name: Setup Database
          command: bin/rails db:create db:schema:load
      - run:
          name: Tests
          command: bin/rails test
      - run:
          name: System Tests
          command: bin/rails test:system

  test_seed:
    executor: rails_executor
    steps:
      - checkout
      - setup_bundler
      - run:
          name: Setup Database
          command: bin/rails db:create db:schema:load
      - run:
          name: Test seeds setup
          command: bin/rails db:seed

  build_docker:
    machine:
      image: ubuntu-2004:202111-02
    steps:
      - checkout
      - run: |
          docker build --target rails-server -t envirodgi/db-rails-server:$CIRCLE_SHA1 .
      - run: |
          docker build --target import-worker -t envirodgi/db-import-worker:$CIRCLE_SHA1 .
      - run: |
          docker build --target status-update-job -t envirodgi/db-status-update-job:$CIRCLE_SHA1 .
      - run:
          name: Save Images
          command: |
            mkdir /tmp/workspace
            docker save --output /tmp/workspace/docker-image-rails-server envirodgi/db-rails-server:$CIRCLE_SHA1
            docker save --output /tmp/workspace/docker-image-import-worker envirodgi/db-import-worker:$CIRCLE_SHA1
            docker save --output /tmp/workspace/docker-image-status-update-job envirodgi/db-status-update-job:$CIRCLE_SHA1
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - docker-image-*

  publish_docker:
    machine:
      image: ubuntu-2004:202111-02
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Load Built Docker Images
          command: |
            docker load --input /tmp/workspace/docker-image-rails-server
            docker load --input /tmp/workspace/docker-image-import-worker
            docker load --input /tmp/workspace/docker-image-status-update-job
      - run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: |
          docker image tag envirodgi/db-rails-server:$CIRCLE_SHA1 envirodgi/db-rails-server:latest
          docker image tag envirodgi/db-import-worker:$CIRCLE_SHA1 envirodgi/db-import-worker:latest
          docker image tag envirodgi/db-status-update-job:$CIRCLE_SHA1 envirodgi/db-status-update-job:latest
      - run: |
          docker push envirodgi/db-rails-server:$CIRCLE_SHA1
          docker push envirodgi/db-rails-server:latest
          docker push envirodgi/db-import-worker:$CIRCLE_SHA1
          docker push envirodgi/db-import-worker:latest
          docker push envirodgi/db-status-update-job:$CIRCLE_SHA1
          docker push envirodgi/db-status-update-job:latest

workflows:
  test:
    jobs:
      - install_dependencies:
          filters:
            branches:
              ignore: release
      - lint:
          requires:
            - install_dependencies
          filters:
            branches:
              ignore: release
      - test:
          requires:
            - install_dependencies
          filters:
            branches:
              ignore: release
      - test_seed:
          requires:
            - install_dependencies
          filters:
            branches:
              ignore: release
      - build_docker:
          filters:
            branches:
              ignore: release

  build-and-publish:
    jobs:
      - test:
          filters:
            branches:
              only:
                - release
      - build_docker:
          requires:
            - test
      - publish_docker:
          requires:
            - build_docker
